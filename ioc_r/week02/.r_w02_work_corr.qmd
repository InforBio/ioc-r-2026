---
title: "Week 2 - Homework"
format: 
  html: default
categories: 
  - week02
  - homework
editor_options: 
  chunk_output_type: console
---

Note: There may be other valid ways to solve this exercise â€” this is just one possible solution!

Use the following code to import the file "read-counts.csv" 
(you have already downloaded it for the hand-on examples of week01).
Name the imported data `expr_data`.

```{r}
# Import data
expr_data <- read.table(
  file = "../exos_data/read-counts.csv",  # replace the path with your own
  header = TRUE, sep = ",", row.names = 1
)
```

1. Is the imported data a matrix?

```{r}
# Check if it's a matrix
is.matrix(expr_data)
```

No, it's a data frame. (We'll talk about it in the week 3!)

2. Transform it to a matrix using `as.matrix()`.

```{r}
expr_mat <- as.matrix(expr_data)
```

3. What are the dimensions of the matrix?

```{r}
# Get the dimensions of the matrix
dim(expr_mat)
```

4. What are the column names and row names?

```{r}
# Get column names
colnames(expr_mat)

# Get row names
rownames(expr_mat)
```


5. Extract all genes' expression for the 10 WT samples (WT.1, WT.2, ..., WT.10),
and store it in a variable called `expr_wt`.
Show the first few rows using `head()` function.

```{r}
# Extract expression data for WT samples
expr_wt <- expr_mat[, paste0("WT.", 1:10)]

# Show the first rows
head(expr_wt)
```

6. What is the average expression level across all WT samples for each gene?
Store the results in a variable called `avg_wt`.

```{r}
# Calculate the row-wise means
avg_wt <- rowMeans(expr_wt)
```

7. Draw a histogram to check the distribution of the average gene expression level for WT samples.

```{r}
hist(avg_wt)
```

The the expression of WT samples shows highly skewed distribution with a long tail of large values.
Most of the genes' expression are between 0 and 5000.

8. Repeat questions 5 to 7 for the SET1 samples (SET1.1, SET1.2, ..., SET1.10).

```{r}
# Extract expression data for SET1 samples
expr_set1 <- expr_mat[, paste0("SET1.", 1:10)]
head(expr_wt) # show first lines

# Calculate average expression for each gene
avg_set1 <- rowMeans(expr_set1)

# Draw histogram for the distribution check
hist(avg_set1)
```

9. What is the absolute difference between the average expression of WT and SET1 samples for each gene? 
Which gene shows the biggest difference?

Hints:

- Use `abs()` to get the absolute value. (`?abs`)
- The `max()` function helps to find the maximum value from a vector. (`?max`)
- The `which.max()` function helps to find the index of the maximum value from a vector. (`?which.max`)

```{r}
# Calculate the absolute difference between the average expression of WT and SET1
diff_abs <- abs(avg_set1 - avg_wt)

# Find the gene with the largest difference
max(diff_abs) # show the max value
which.max(diff_abs) # show the index of the max value
diff_abs[which.max(diff_abs)] # extract the max value by using its index
```


10. Compare the following matrix to the one we created during the course' exercise (the matrix named `expression_levels`).
What is the key difference in how the matrix is constructed? 
Provide a brief explanation.

```{r}
matrix(
  c(10, 12, 15, 20, 18, 22, 14, 16, 19, 8, 9, 7, 25, 30, 28),
  ncol = 3
)
```

The key difference lies in how the matrix is organized:

- In the hands-on example matrix (`expression_levels`), `nrow = 3` is specified, so the matrix is constructed with 3 rows, and the values are filled column-wise by default, which results a matrix of 3 rows and 5 columns.
- In the homework matrix, `ncol = 3` is specified, so the matrix is constructed with 3 columns, and the values are again filled column-wise by default. This matrix has 5 rows and 3 columns.
